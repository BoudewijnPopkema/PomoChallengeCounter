// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PomoChallengeCounter.Data;

#nullable disable

namespace PomoChallengeCounter.Migrations
{
    [DbContext(typeof(PomoChallengeDbContext))]
    partial class PomoChallengeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PomoChallengeCounter.Models.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("boolean");

                    b.Property<int>("SemesterNumber")
                        .HasColumnType("integer");

                    b.Property<decimal>("ServerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("WeekCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("idx_challenges_active");

                    b.HasIndex("IsCurrent")
                        .HasDatabaseName("idx_challenges_current");

                    b.HasIndex("ServerId")
                        .HasDatabaseName("idx_challenges_server");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Emoji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChallengeId")
                        .HasColumnType("integer");

                    b.Property<string>("EmojiCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("EmojiType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("PointValue")
                        .HasColumnType("integer");

                    b.Property<decimal>("ServerId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId")
                        .HasDatabaseName("idx_emojis_challenge");

                    b.HasIndex("ServerId")
                        .HasDatabaseName("idx_emojis_server");

                    b.ToTable("Emojis");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.MessageLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BonusPoints")
                        .HasColumnType("integer");

                    b.Property<int>("GoalPoints")
                        .HasColumnType("integer");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("PomodoroPoints")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("WeekId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MessageId")
                        .IsUnique()
                        .HasDatabaseName("uk_messages_processed");

                    b.HasIndex("WeekId")
                        .HasDatabaseName("idx_messages_week");

                    b.HasIndex("UserId", "WeekId")
                        .HasDatabaseName("idx_messages_user_week");

                    b.ToTable("MessageLogs");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Server", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("CategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ConfigRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal?>("PingRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .HasDatabaseName("idx_servers_guild");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.UserGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActualBonusPoints")
                        .HasColumnType("integer");

                    b.Property<int>("ActualPomodoroPoints")
                        .HasColumnType("integer");

                    b.Property<int>("GoalPoints")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAchieved")
                        .HasColumnType("boolean");

                    b.Property<string>("RewardEmoji")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("WeekId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WeekId");

                    b.HasIndex("UserId", "WeekId")
                        .IsUnique()
                        .HasDatabaseName("uk_goals_user_week");

                    b.ToTable("UserGoals");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Week", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChallengeId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("GoalThreadId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("LeaderboardPosted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("ThreadId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId")
                        .HasDatabaseName("idx_weeks_challenge");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Challenge", b =>
                {
                    b.HasOne("PomoChallengeCounter.Models.Server", "Server")
                        .WithMany("Challenges")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Emoji", b =>
                {
                    b.HasOne("PomoChallengeCounter.Models.Challenge", "Challenge")
                        .WithMany("Emojis")
                        .HasForeignKey("ChallengeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PomoChallengeCounter.Models.Server", "Server")
                        .WithMany("Emojis")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Challenge");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.MessageLog", b =>
                {
                    b.HasOne("PomoChallengeCounter.Models.Week", "Week")
                        .WithMany("MessageLogs")
                        .HasForeignKey("WeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Week");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.UserGoal", b =>
                {
                    b.HasOne("PomoChallengeCounter.Models.Week", "Week")
                        .WithMany("UserGoals")
                        .HasForeignKey("WeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Week");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Week", b =>
                {
                    b.HasOne("PomoChallengeCounter.Models.Challenge", "Challenge")
                        .WithMany("Weeks")
                        .HasForeignKey("ChallengeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Challenge");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Challenge", b =>
                {
                    b.Navigation("Emojis");

                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Server", b =>
                {
                    b.Navigation("Challenges");

                    b.Navigation("Emojis");
                });

            modelBuilder.Entity("PomoChallengeCounter.Models.Week", b =>
                {
                    b.Navigation("MessageLogs");

                    b.Navigation("UserGoals");
                });
#pragma warning restore 612, 618
        }
    }
}
